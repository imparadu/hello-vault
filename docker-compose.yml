services:
  frontend:
    build: ./frontend
    ports:
      - "80:3000"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build: ./backend
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      vault:
        condition: service_started
    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/secrets_db
      - JWT_SECRET=bXlzZWNyZXRrZXk5234567890abcdef1234567890abcdef
    networks:
      - app-network

  vault:
    image: hashicorp/vault:latest
    ports:
      - "8300:8300"
    cap_add:
      - IPC_LOCK
    volumes:
      - ./vault_data:/vault/file
      - ./vault/config/vault.hcl:/etc/vault.d/vault.hcl
    command: server -config=/etc/vault.d/vault.hcl
    environment:
      - VAULT_LOG_LEVEL=debug
    networks:
      - app-network

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=secrets_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d secrets_db"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  vault_data:
  postgres_data:

networks:
  app-network:
    driver: bridge
    name: vault-app-network
